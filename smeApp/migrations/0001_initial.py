# Generated by Django 3.2.18 on 2023-04-04 03:10

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('role', models.CharField(choices=[('Employee', 'Employee'), ('Manager', 'Manager'), ('Admin', 'Admin'), ('Other', 'Other')], default='Other', max_length=10)),
                ('photo', models.ImageField(blank=True, default='user_photos/default-avatar.png', upload_to='user_photos/')),
                ('verified', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'db_table': 'users',
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('address', models.CharField(max_length=255)),
                ('contact_name', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(max_length=20)),
                ('role', models.CharField(choices=[('job_contact', 'Job Contact'), ('property_owner', 'Property Owner'), ('tenant', 'Tenant'), ('manager', 'Manager'), ('vendor', 'Vendor'), ('Other', 'Other')], max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='CompanyProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('industry', models.CharField(blank=True, max_length=100, null=True)),
                ('address_line_1', models.TextField(blank=True, null=True)),
                ('address_line_2', models.TextField(blank=True, null=True)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='company_logos/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'jpeg', 'png', 'gif'])])),
                ('category', models.CharField(choices=[('art_photography_creative', 'Art, Photography & Creative Services'), ('construction_home_improvement', 'Construction & Home Improvement'), ('consulting_professional', 'Consulting & Professional Services'), ('financial_services_insurance', 'Financial Services & Insurance'), ('hair_spa_aesthetics', 'Hair, Spa & Aesthetics'), ('nonprofits_associations_groups', 'Non-profits, Associations & Groups'), ('real_estate', 'Real Estate'), ('retailers_resellers_sales', 'Retailers, Resellers & Sales'), ('web_tech_media', 'Web, Tech & Media'), ('other', 'Other')], default='other', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Expense',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('Rent', 'Rent'), ('Repairs and Maintenance', 'Repairs and Maintenance'), ('Payroll', 'Payroll'), ('Meals and Entertainment', 'Meals and Entertainment'), ('Telephone', 'Telephone'), ('Travel', 'Travel'), ('Utilities', 'Utilities'), ('Advertising and Promotion', 'Advertising and Promotion'), ('Other', 'Other')], default='Other', max_length=50)),
                ('description', models.CharField(max_length=255)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('date_created', models.DateField()),
                ('date_modified', models.DateField(auto_now=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('receipt', models.FileField(blank=True, null=True, upload_to='receipts/')),
                ('vendor', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Income',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('Sale', 'Sale'), ('Service', 'Service'), ('Product', 'Product'), ('Other', 'Other')], default='Sale', max_length=20)),
                ('description', models.CharField(max_length=255)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('date_created', models.DateField()),
                ('date_modified', models.DateField(auto_now=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('invoice', models.FileField(blank=True, null=True, upload_to='invoices/')),
                ('customer', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('po_number', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.CharField(choices=[('quote', 'Quote'), ('work_order', 'Work Order'), ('ongoing', 'Ongoing'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('postponed', 'Postponed')], default='quote', max_length=20)),
                ('category', models.CharField(choices=[('after_hours', 'After Hours'), ('standard', 'Standard'), ('vip', 'VIP'), ('warranty', 'Warranty')], default='standard', max_length=20)),
                ('description', models.TextField(blank=True, null=True)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('total_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('payment_status', models.CharField(blank=True, choices=[('unpaid', 'Unpaid'), ('partially_paid', 'Partially Paid'), ('paid', 'Paid'), ('late', 'Late Payment'), ('pending', 'Pending Payment'), ('overdue', 'Overdue'), ('not_invoiced', 'Not Yet Invoiced'), ('refunded', 'Refunded'), ('cancelled', 'Cancelled'), ('other', 'Other')], max_length=20, null=True)),
                ('payment_type', models.CharField(blank=True, choices=[('credit_card', 'Credit Card'), ('debit_card', 'Debit Card'), ('cash', 'Cash'), ('check', 'Check'), ('paypal', 'PayPal'), ('other', 'Other')], max_length=20, null=True)),
                ('assigned_worker', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='smeApp.client')),
            ],
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(blank=True)),
                ('attachment', models.FileField(blank=True, upload_to='attachments/')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('related_object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='smeApp.job')),
            ],
        ),
        migrations.AddField(
            model_name='job',
            name='notes',
            field=models.ManyToManyField(blank=True, to='smeApp.Note'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='company',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='smeApp.companyprofile'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
